<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/table-code/src/app/table/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/table-code/src/app/table/page.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import React, { useEffect, useState } from &quot;react&quot;;&#10;import { ProductsTable } from &quot;@/components/ProductsTable&quot;;&#10;import { Card } from &quot;@/components/ui/card&quot;;&#10;import { Product } from &quot;@/lib/products&quot;;&#10;import { getProducts } from &quot;@/lib/productUtils&quot;;&#10;import ClientOnly from &quot;@/components/ClientOnly&quot;;&#10;import CommodityTickerPanel from &quot;@/components/CommodityTickerPanel&quot;;&#10;&#10;const PRODUCT_ID_MAP: { [id: string]: string } = {&#10;  &quot;6ccbf93e-d43d-46ab-ba50-c26659add883&quot;: &quot;M0 SING 380 FP&quot;,&#10;  &quot;9c68de75-aed7-417b-abab-eaf576d0d6fe&quot;: &quot;M0 SG 10PPM FP&quot;,&#10;  &quot;99d27f4d-0a7e-44fe-b9de-9c27d27f08d2&quot;: &quot;M0 0.5% GC FP&quot;,&#10;  &quot;d71f82b9-21e2-49f0-9974-4a11a9e5b09f&quot;: &quot;M0 0.1% BGS&quot;,&#10;  &quot;29d3a405-cb03-45b4-9ebf-f0176b7ba06a&quot;: &quot;M0 0.5% BGS FP&quot;,&#10;  &quot;662e5a2f-f028-4d18-81dc-89be3ba01f3a&quot;: &quot;M0 0.5% SG FP&quot;,&#10;  &quot;e506264b-1bcd-429f-b018-f50e3f517133&quot;: &quot;M0 3% GC FP&quot;,&#10;  &quot;e9e305ee-8605-4503-b3e2-8f5763870cd2&quot;: &quot;M0 3.5% BGS FP&quot;,&#10;  &quot;b0738070-229c-4aa7-b5d0-45b4119dd0e0&quot;: &quot;M0 1% FOB FP&quot;,&#10;};&#10;&#10;interface LivePrice {&#10;  id: string;&#10;  value: number;&#10;}&#10;&#10;export default function TradingPage() {&#10;  const [products, setProducts] = useState&lt;Product[]&gt;([]);&#10;  const [livePrices, setLivePrices] = useState&lt;LivePrice[]&gt;([]);&#10;&#10;  useEffect(() =&gt; {&#10;    const loadProducts = () =&gt; {&#10;      const loadedProducts = getProducts();&#10;      setProducts(loadedProducts);&#10;    };&#10;    loadProducts();&#10;    const interval = setInterval(loadProducts, 5000);&#10;    return () =&gt; clearInterval(interval);&#10;  }, []);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchLivePrices = async () =&gt; {&#10;      try {&#10;        const res = await fetch(&quot;/api/folio-prices&quot;);&#10;        if (!res.ok) return;&#10;        const data = await res.json();&#10;        setLivePrices(Array.isArray(data) ? data : []);&#10;      } catch {&#10;        setLivePrices([]);&#10;      }&#10;    };&#10;    fetchLivePrices();&#10;    const interval = setInterval(fetchLivePrices, 5000);&#10;    return () =&gt; clearInterval(interval);&#10;  }, []);&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-900 text-white&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto p-6&quot;&gt;&#10;        &lt;div className=&quot;mb-8&quot;&gt;&#10;          &lt;h1 className=&quot;text-4xl font-bold text-foreground mb-2&quot;&gt;&#10;            Trading Panel&#10;          &lt;/h1&gt;&#10;          &lt;p className=&quot;text-muted-foreground&quot;&gt;&#10;            Real-time market data and analytics&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;grid gap-6 md:grid-cols-3&quot;&gt;&#10;          &lt;Card className=&quot;bg-gray-800 border border-black shadow-sm md:col-span-2&quot;&gt;&#10;            &lt;div className=&quot;p-6&quot;&gt;&#10;              &lt;div className=&quot;mb-6&quot;&gt;&#10;                &lt;h2 className=&quot;text-xl font-semibold text-foreground&quot;&gt;&#10;                  Price Overview&#10;                &lt;/h2&gt;&#10;                &lt;p className=&quot;text-sm text-muted-foreground mt-1&quot;&gt;&#10;                  Current market prices for all products&#10;                &lt;/p&gt;&#10;              &lt;/div&gt;&#10;              &lt;ProductsTable data={products} /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/Card&gt;&#10;          &lt;ClientOnly&gt;&#10;            &lt;Card className=&quot;border shadow-sm&quot;&gt;&#10;              &lt;div className=&quot;p-6&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-center mb-6&quot;&gt;&#10;                  &lt;img&#10;                    src=&quot;/csc.png&quot;&#10;                    alt=&quot;Paper Trading Logo&quot;&#10;                    style={{ display: &quot;block&quot; }}&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  {Object.entries(PRODUCT_ID_MAP).map(([id, name]) =&gt; {&#10;                    const priceObj = livePrices.find((p) =&gt; p.id === id);&#10;                    return (&#10;                      &lt;div&#10;                        key={id}&#10;                        className=&quot;flex flex-col border-b pb-2 last:border-b-0 last:pb-0&quot;&#10;                      &gt;&#10;                        &lt;span className=&quot;font-medium text-foreground&quot;&gt;{name}&lt;/span&gt;&#10;                        &lt;span className=&quot;text-lg font-bold text-primary&quot;&gt;&#10;                          {priceObj &amp;&amp; priceObj.value !== undefined&#10;                            ? `Â£${priceObj.value.toLocaleString(undefined, {&#10;                                minimumFractionDigits: 2,&#10;                                maximumFractionDigits: 2,&#10;                              })}`&#10;                            : &quot;--&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    );&#10;                  })}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/Card&gt;&#10;          &lt;/ClientOnly&gt;&#10;          {/* Commodity Ticker Panel */}&#10;          &lt;CommodityTickerPanel /&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import React, { useEffect, useState } from &quot;react&quot;;&#10;import { ProductsTable } from &quot;@/components/ProductsTable&quot;;&#10;import { Card } from &quot;@/components/ui/card&quot;;&#10;import { Product } from &quot;@/lib/products&quot;;&#10;import { getProducts } from &quot;@/lib/productUtils&quot;;&#10;import ClientOnly from &quot;@/components/ClientOnly&quot;;&#10;import CommodityTickerPanel from &quot;@/components/CommodityTickerPanel&quot;;&#10;&#10;const PRODUCT_ID_MAP: { [id: string]: string } = {&#10;  &quot;6ccbf93e-d43d-46ab-ba50-c26659add883&quot;: &quot;M0 SING 380 FP&quot;,&#10;  &quot;9c68de75-aed7-417b-abab-eaf576d0d6fe&quot;: &quot;M0 SG 10PPM FP&quot;,&#10;  &quot;99d27f4d-0a7e-44fe-b9de-9c27d27f08d2&quot;: &quot;M0 0.5% GC FP&quot;,&#10;  &quot;d71f82b9-21e2-49f0-9974-4a11a9e5b09f&quot;: &quot;M0 0.1% BGS&quot;,&#10;  &quot;29d3a405-cb03-45b4-9ebf-f0176b7ba06a&quot;: &quot;M0 0.5% BGS FP&quot;,&#10;  &quot;662e5a2f-f028-4d18-81dc-89be3ba01f3a&quot;: &quot;M0 0.5% SG FP&quot;,&#10;  &quot;e506264b-1bcd-429f-b018-f50e3f517133&quot;: &quot;M0 3% GC FP&quot;,&#10;  &quot;e9e305ee-8605-4503-b3e2-8f5763870cd2&quot;: &quot;M0 3.5% BGS FP&quot;,&#10;  &quot;b0738070-229c-4aa7-b5d0-45b4119dd0e0&quot;: &quot;M0 1% FOB FP&quot;,&#10;};&#10;&#10;interface LivePrice {&#10;  id: string;&#10;  value: number;&#10;}&#10;&#10;export default function TradingPage() {&#10;  const [products, setProducts] = useState&lt;Product[]&gt;([]);&#10;  const [livePrices, setLivePrices] = useState&lt;LivePrice[]&gt;([]);&#10;&#10;  useEffect(() =&gt; {&#10;    const loadProducts = () =&gt; {&#10;      const loadedProducts = getProducts();&#10;      setProducts(loadedProducts);&#10;    };&#10;    loadProducts();&#10;    const interval = setInterval(loadProducts, 5000);&#10;    return () =&gt; clearInterval(interval);&#10;  }, []);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchLivePrices = async () =&gt; {&#10;      try {&#10;        const res = await fetch(&quot;/api/folio-prices&quot;);&#10;        if (!res.ok) return;&#10;        const data = await res.json();&#10;        setLivePrices(Array.isArray(data) ? data : []);&#10;      } catch {&#10;        setLivePrices([]);&#10;      }&#10;    };&#10;    fetchLivePrices();&#10;    const interval = setInterval(fetchLivePrices, 5000);&#10;    return () =&gt; clearInterval(interval);&#10;  }, []);&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-900 text-white&quot;&gt;&#10;      &lt;div className=&quot;container mx-auto p-6&quot;&gt;&#10;        &lt;div className=&quot;mb-8&quot;&gt;&#10;          &lt;h1 className=&quot;text-4xl font-bold text-foreground mb-2&quot;&gt;&#10;            Trading Panel&#10;          &lt;/h1&gt;&#10;          &lt;p className=&quot;text-muted-foreground&quot;&gt;&#10;            Real-time market data and analytics&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;grid gap-6 md:grid-cols-3&quot;&gt;&#10;          &lt;Card className=&quot;bg-gray-800 border border-black shadow-sm md:col-span-2&quot;&gt;&#10;            &lt;div className=&quot;p-6&quot;&gt;&#10;              &lt;div className=&quot;mb-6&quot;&gt;&#10;                &lt;h2 className=&quot;text-xl font-semibold text-foreground&quot;&gt;&#10;                  Price Overview&#10;                &lt;/h2&gt;&#10;                &lt;p className=&quot;text-sm text-muted-foreground mt-1&quot;&gt;&#10;                  Current market prices for all products&#10;                &lt;/p&gt;&#10;              &lt;/div&gt;&#10;              &lt;ProductsTable data={products} /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/Card&gt;&#10;          &lt;ClientOnly&gt;&#10;            &lt;Card className=&quot;border shadow-sm mb-0&quot;&gt;&#10;              &lt;div className=&quot;p-6 pb-3&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-center mb-6&quot;&gt;&#10;                  &lt;img&#10;                    src=&quot;/csc.png&quot;&#10;                    alt=&quot;Paper Trading Logo&quot;&#10;                    style={{ display: &quot;block&quot; }}&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  {Object.entries(PRODUCT_ID_MAP).map(([id, name]) =&gt; {&#10;                    const priceObj = livePrices.find((p) =&gt; p.id === id);&#10;                    return (&#10;                      &lt;div&#10;                        key={id}&#10;                        className=&quot;flex flex-col border-b pb-2 last:border-b-0 last:pb-0&quot;&#10;                      &gt;&#10;                        &lt;span className=&quot;font-medium text-foreground&quot;&gt;{name}&lt;/span&gt;&#10;                        &lt;span className=&quot;text-lg font-bold text-primary&quot;&gt;&#10;                          {priceObj &amp;&amp; priceObj.value !== undefined&#10;                            ? `Â£${priceObj.value.toLocaleString(undefined, {&#10;                                minimumFractionDigits: 2,&#10;                                maximumFractionDigits: 2,&#10;                              })}`&#10;                            : &quot;--&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    );&#10;                  })}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              {/* Move ticker panel inside this card, below the csc section */}&#10;              &lt;div className=&quot;border-t border-gray-700&quot;&gt;&#10;                &lt;CommodityTickerPanel /&gt;&#10;              &lt;/div&gt;&#10;            &lt;/Card&gt;&#10;          &lt;/ClientOnly&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>