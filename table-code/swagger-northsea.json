{"swagger":"2.0","x-id":["folio-api.routes/api"],"securityDefinitions":{"apiAuth":{"type":"apiKey","description":"access token, example: Bearer token","name":"Authorization","in":"header"}},"info":{"title":"Artis Streaming API","description":"API routes for liveprices"},"paths":{"/info":{"get":{"responses":{"429":{"schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"},"description":""}},"produces":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"consumes":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"parameters":[],"summary":"Get version information"}},"/login":{"post":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"Token information","schema":{"type":"object","properties":{"access_token":{"type":"string"},"token_type":{"type":"string"},"expires_in":{"type":"integer"}},"required":["access_token","token_type","expires_in"],"title":"api/login-response"}}},"produces":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"consumes":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"parameters":[{"in":"body","name":"api/basic_login_params","description":"","required":true,"schema":{"type":"object","properties":{"id":{"type":"string","x_all_of":[{"type":"string"},{}]},"secret":{"type":"string","x_all_of":[{"type":"string"},{}]}},"required":["id","secret"],"title":"api/basic-login-params"}}],"summary":"Login","description":"## Summary\n\nLogin using `id` and `secret` to generate an `access_token` to use for interacting with the Artis API.\n","deprecated":true}},"/oauth/token":{"post":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"Token information","schema":{"type":"object","properties":{"access_token":{"type":"string"},"token_type":{"type":"string"},"expires_in":{"type":"integer"}},"required":["access_token","token_type","expires_in"],"title":"api/login-response"}}},"consumes":["application/x-www-form-urlencoded"],"parameters":[{"in":"formData","name":"audience","description":"","type":"string","required":true,"x-allOf":[{"type":"string"},{}]},{"in":"formData","name":"grant_type","description":"","type":"string","required":true,"x-allOf":[{"type":"string"},{}]},{"in":"formData","name":"client_id","description":"","type":"string","required":false,"x-allOf":[{"type":"string"},{}]},{"in":"formData","name":"client_secret","description":"","type":"string","required":false,"x-allOf":[{"type":"string"},{}]}],"summary":"OAuth2 Client Credentials Login","description":"## Summary\nLogin using [OAuth2 Client Credentials Flow](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/)\n\n## Request\n\nThe `token` request requires 4 pieces of information.\n\n1. client_id (part of client authentication)\n2. client_secret (part of client authentication)\n3. audience\n4. grant_type\n\n\n### Mandatory form params\n\nSend these form params as urlencoded form params.\n\n* `audience` The audience for the token. Must be set to `folio-api`\n* `grant_type` Must be set to `client_credentials`.\n\n### Client authentication\n`client_id` and `client_secret` can be sent using any of the 2 supported methods according to the [Spec](https://www.rfc-editor.org/rfc/rfc6749#section-2.3.1)\n\n### Form params\n\nThey can be sent as urlencoded form-params along with the `audience` and `grant_type` keys\n\n* `client_id` The client ID (optional)\n* `client_secret` The client secret (optional)\n\nOR\n\n### HTTP Basic authentication header\n\nThey can be sent as base64 encoded strings with the HTTP `Authorization` header.\n\n```\n{\"authorization\": \"Basic <base64 encoded client-id:client-secret>\"}\n```\n"}},"/products":{"get":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"Products","schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"package":{"type":"string"},"source":{"type":"string"}},"required":["id","name","description","package","source"]},"title":"api/products-response"}}},"produces":["application/json"],"consumes":["application/json"],"parameters":[],"summary":"Get available products","description":"# Table of Contents\n\n1.  [Headers](#headers)\n2.  [Responses](#responses)\n3.  [Example](#example)\n\nThe endpoint returns the all the products that the user has permissions for.\n\n\n<a id=\"headers\"></a>\n\n# Headers\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Header</th>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">Authorization</td>\n<td class=\"org-left\">Bearer &lt;JWT TOKEN&gt;</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"responses\"></a>\n\n# Responses\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">HTTP Status Code</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">200 - OK</td>\n<td class=\"org-left\">The request is successful and pages data will be returned back as json</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">401 - Unauthorized</td>\n<td class=\"org-left\">The provided JWT token is invalid or has expired</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">429 - Too Many Requests</td>\n<td class=\"org-left\">The user has too many concurrent sessions</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">500 - Internal Server Error</td>\n<td class=\"org-left\">An error occurred while processing the request</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"example\"></a>\n\n# Example\n\n    curl -X GET 'https://folio-api.artis.works/products' -H 'Authorization: Bearer <JWT>' -H 'Content-Type: application/json'\n\n","security":[{"apiAuth":[]}]},"put":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}}},"produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"body","name":"api/snapshot_params","description":"","required":true,"schema":{"type":"array","items":{"type":"string","format":"uuid"},"x_all_of":[{"type":"array","items":{"type":"string","format":"uuid"}},{}],"title":"api/snapshot-params"}}],"summary":"Set available products for the API_DATA page","description":"## Set available products for the API_DATA page\n\nThe set of product-ids that you provide here will be available on the liveprices SSE stream endpoint.\nTo get a list of products that are available to you via the API, use the [GET /products API](#/default/get_products)\n\n\n```note\nBe careful while using this API.\nThis is a PUT call which replaces the current set of products being returned with this new list.\n\n```\n","security":[{"apiAuth":[]}]}},"/pages":{"get":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"User's Pages","schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"page":{"type":"string"}},"required":["id","page"]},"title":"api/pages-response"}}},"produces":["application/json"],"consumes":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"parameters":[],"summary":"Get user's pages","description":"# Table of Contents\n\n1.  [Headers](#headers)\n2.  [Responses](#responses)\n3.  [Example](#example)\n\nThe endpoint returns the all the pages defined for the user.\n\n\n<a id=\"headers\"></a>\n\n# Headers\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Header</th>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">Authorization</td>\n<td class=\"org-left\">Bearer &lt;JWT TOKEN&gt;</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"responses\"></a>\n\n# Responses\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">HTTP Status Code</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">200 - OK</td>\n<td class=\"org-left\">The request is successful and pages data will be returned back as json</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">401 - Unauthorized</td>\n<td class=\"org-left\">The provided JWT token is invalid or has expired</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">429 - Too Many Requests</td>\n<td class=\"org-left\">The user has too many concurrent sessions</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">500 - Internal Server Error</td>\n<td class=\"org-left\">An error occurred while processing the request</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"example\"></a>\n\n# Example\n\n    curl -X GET 'https://folio-api.artis.works/pages' -H 'Authorization: Bearer <JWT>' -H 'Content-Type: application/json'\n","security":[{"apiAuth":[]}]}},"/prices/v1/liveprices":{"get":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"# A stream of server-sent events\n\nThe connection will remain open, and new events will be sent as they occur.\n⚠️ **Warning:** The 'Try it out' feature in Swagger UI is not compatible with streaming responses and will appear to hang indefinitely. Use a tool like `curl` or a dedicated client to test this endpoint.\n\n    curl --location --request GET 'https://folio-api.artis.works/prices/v1/liveprices?update_rate=1000&page=A_PAGE' \\\n    -N -H 'Authorization: Bearer <JWT>' -H 'Accept: text/event-stream'\n    \n## Event Format\nThe stream follows the standard SSE format. Each message includes a JSON `data` payload and an optional `event` type:\n### keep-alive messages, fired every 15 seconds\n\n    event: ka\n    data: {\\\"time\\\": \\\"2025-09-02T07:38:22.034431Z\\\"}\n\n### data messages\n\n    data: <described-below>\n","schema":{"title":"api/v1-response","example":{"generated_at":"2023-01-16T12 00 00Z","payload":{"PetroChina":{"type":"organisation","packages":{"Official":{"EBOB FP":{"uom":"$/ton","H23":123.45,"N23":678.9,"V23":{"error":{"cause":"missing-dependency"}}}}}},"ICE":{"type":"exchange","packages":{}}}}}}},"produces":["text/event-stream"],"consumes":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"parameters":[{"in":"query","name":"page","description":"","type":"string","required":false,"x-allOf":[{"type":"string"},{}]},{"in":"query","name":"update_rate","description":"","type":"integer","required":false,"format":"int64"}],"summary":"Stream live prices values","description":"# Table of Contents\n\n1.  [Headers](#headers)\n2.  [Responses](#responses)\n3.  [Example](#example)\n4.  [Data Objects](#data_objects)\n\nThe endpoint sends data using [Server-Sent Events (SSE)](https://en.wikipedia.org/wiki/Server-sent_events) which allows for performant and secure streaming of data. Each message is a complete snapshot of all subscribed curves. Responses will be sent periodically once per second. A custom update rate can be set in milliseconds using the `update_rate` query parameter.\n\n\n<a id=\"headers\"></a>\n\n# Headers\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Header</th>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">Authorization</td>\n<td class=\"org-left\">Bearer &lt;JWT TOKEN&gt;</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"responses\"></a>\n\n# Responses\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">HTTP Status Code</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">200 - OK</td>\n<td class=\"org-left\">The SSE session has been established and data is being streamed</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">401 - Unauthorized</td>\n<td class=\"org-left\">The provided JWT token is invalid or has expired</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">429 - Too Many Requests</td>\n<td class=\"org-left\">The user has too many concurrent sessions</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">500 - Internal Server Error</td>\n<td class=\"org-left\">An error occurred while establishing the SSE session</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"example\"></a>\n\n# Example\n\n    curl --location --request GET 'https://folio-api.artis.works/prices/v1/liveprices?update_rate=1000&page=A_PAGE' \\\n    -N -H 'Authorization: Bearer <JWT>' -H 'Accept: text/event-stream'\n\n\n<a id=\"data_objects\"></a>\n\n# Data Objects\n\nMessages over the SSE connection will follow the [Events specification](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#event).\n\nEach message consists of one or more lines of text listing the fields for that message. Each field is represented by the field name, followed by a colon, followed by the text data for that field's value.\nEach message received has some combination of the following fields, one per line:\n\n* event: A string identifying the type of event described.\n* data: The data field for the message. This will be `json` encoded data.\n\n## Supported events\n\nCurrently there are 2 types of events that can be received from the Artis SSE stream\n\n* ka : keep-alive, this is sent every 15 seconds and serves as a heartbeat message to ensure the connection is kept open.\n  * Along with this event, there will also be data field giving more details about the event. Data sent along with the `ka` event will be a map like this\n  ```json\n  {\"time\" \"2024-02-29T18:28:39.641757Z\"}\n  ```\n* disconnect: this event will be sent in case of errors on the server side indicating that the stream needs to be closed. This will be the last message received on the SSE stream before the connection is closed. \n  * Along with this event, there will be data field giving more details about the error. For example, in case the authentication token expires during an ongoing SSE connection\n  ```json\n  {\"error\" {\"code\" 4400},\n   \"cause\" {\"server_error_msg\":\"4400: Connection initialization failed: Could not verify JWT: JWTExpired\"}}\n  ```\n\n## Data messages\n\nIn addition to the event messages, clients will also receive `data-only` messages as `json` with the following payload:\n\n\n    {\n      // <RESPONSE> Type\n      \"generated_at\": \"2023-01-16T12:00:00Z\",\n      \"payload\": {\n        \"AcmeCorp\" {\n          // <SOURCE> Type\n          \"type\": \"organisation\",\n          \"packages\": {\n            // <PACKAGE> Type\n            \"Official\": {\n              \"EBOB FP\": {\n                // <PRODUCT> Type\n                \"uom\" : \"$/ton\",\n                // <VALUE> Type\n                \"H23\": 123.45,\n                \"N23\": 678.90,\n                \"V23\": {\"error\": {\"cause\": \"missing-dependency\"}},\n                ...\n              },\n              ...\n            }\n          }\n        },\n        \"ICE\": {\n          \"type\": \"exchange\",\n          \"packages\": {\n            ...\n          }\n        }\n      }\n    }\n\n**RESPONSE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">generated_at</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">the ISO-8601 formatted date time indicating when this object was calculated</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">payload</td>\n<td class=\"org-left\">Object</td>\n<td class=\"org-left\">an object representing the <a id=\"org4495506\"></a> <code>sources</code> of the data. The keys inside are homogenous, representing the <a href=\"#org259e2d6\">sources</a> of data.</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org259e2d6\"></a>\n**SOURCE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">type</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">See <a href=\"#org5b6539b\">SourceType</a> section below</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">packages</td>\n<td class=\"org-left\">Object</td>\n<td class=\"org-left\">An object representing the <a href=\"#org7900de4\">packages</a> under the source. The keys inside are homogenous, representing the names of the packages.</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org7900de4\"></a>\n**PACKAGE TYPE**\n\nThe package object has homogenous keys representing the products that belong to the package. We supply the product long name which is unique to the package.\n\n<a id=\"orgbcd3b35\"></a>\n**PRODUCT TYPE**\n\nThe product package has homogenous keys with values specified as [Value Types](#orgae0b68f), defined below, apart from [`uom`](#orgdff38cf) which is defined below. Its keys are the tenor codes that we have results for. Tenor code definitions can be seen later in the document.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">uom</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">See <a href=\"#orgdff38cf\">UOM</a> section below</td>\n</tr>\n\n</tbody>\n</table>\n\n<a id=\"orgae0b68f\"></a>\n**VALUE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">value</td>\n<td class=\"org-left\">Double/Map</td>\n<td class=\"org-left\">The value or Map containing 'error' key with details about the error</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">tenor</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">The relative period for the instrument. We currently only support monthly products and the format will be \"MDD\" where DD is the numerical month value</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org5b6539b\"></a>\n**SOURCETYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">organisation</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">exchange</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">broker</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orgdff38cf\"></a>\n**UOM**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">days</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mwh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">flatr</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kb</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kbd</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kcbm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kg_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kgal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">lots</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">none</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">p_thm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">percent</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">rmb_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bsh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_day</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_mmbtu</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_thousands</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usdmm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws_and_usd_ton</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orga054d25\"></a>\n**TENOR CODES**\n\nCurrently, Artis Streaming API supports only monthly products and therefore all tenor codes will be for months. Under a product we supply the date code for the results where, comprised of a single character and two digits representing the year, e.g. H23 = March 2023.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Month Code</th>\n<th scope=\"col\" class=\"org-left\">Month</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">F</td>\n<td class=\"org-left\">January</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">G</td>\n<td class=\"org-left\">February</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">H</td>\n<td class=\"org-left\">March</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">J</td>\n<td class=\"org-left\">April</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">K</td>\n<td class=\"org-left\">May</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">M</td>\n<td class=\"org-left\">June</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">N</td>\n<td class=\"org-left\">July</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Q</td>\n<td class=\"org-left\">August</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">U</td>\n<td class=\"org-left\">September</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">V</td>\n<td class=\"org-left\">October</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">X</td>\n<td class=\"org-left\">November</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Z</td>\n<td class=\"org-left\">December</td>\n</tr>\n</tbody>\n</table>\n\n","security":[{"apiAuth":[]}],"deprecated":true},"post":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"Liveprices Snapshot v1 payload","schema":{"title":"api/v1-response","example":{"generated_at":"2023-01-16T12 00 00Z","payload":{"PetroChina":{"type":"organisation","packages":{"Official":{"EBOB FP":{"uom":"$/ton","H23":123.45,"N23":678.9,"V23":{"error":{"cause":"missing-dependency"}}}}}},"ICE":{"type":"exchange","packages":{}}}}}}},"produces":["application/json"],"consumes":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"parameters":[{"in":"body","name":"api/snapshot_params","description":"","required":true,"schema":{"type":"array","items":{"type":"string","format":"uuid"},"x_all_of":[{"type":"array","items":{"type":"string","format":"uuid"}},{}],"title":"api/snapshot-params"}}],"summary":"Get snapshot of specified products live prices","description":"# Table of Contents\n\n1.  [Headers](#headers)\n2.  [Responses](#responses)\n3.  [POST body](#post_body)\n3.  [Example](#example)\n4.  [Data Objects](#data_objects)\n\nThe endpoint returns a snapshot of the specified products values.\n\n<a id=\"headers\"></a>\n\n# Headers\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Header</th>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">Authorization</td>\n<td class=\"org-left\">Bearer &lt;JWT TOKEN&gt;</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"responses\"></a>\n\n# Responses\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">HTTP Status Code</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">200 - OK</td>\n<td class=\"org-left\">The SSE session has been established and data is being streamed</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">401 - Unauthorized</td>\n<td class=\"org-left\">The provided JWT token is invalid or has expired</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">429 - Too Many Requests</td>\n<td class=\"org-left\">The user has too many concurrent sessions</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">500 - Internal Server Error</td>\n<td class=\"org-left\">An error occurred while establishing the SSE session</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"post_body\"></a>\n\n# POST body\n\nThe endpoint expects a JSON encoded body in the POST request. The body is expected to be an array of Product-ids for which snapshot\ndata is required.\n\n\n<a id=\"example\"></a>\n\n# Example\n\n    curl --location --request POST 'https://folio-api.artis.works/prices/v1/liveprices' \\\n    -H 'Authorization: Bearer <JWT>' \\\n    -H 'Content-Type: application/json' \\\n    -d '[\"productId1\", \"productId2\"]'\n\n\n<a id=\"data_objects\"></a>\n\n# Data Objects\n\nIf a successful request is made then data will be returned as `json`. An example payload:\n\n    {\n      // <RESPONSE> Type\n      \"generated_at\": \"2023-01-16T12:00:00Z\",\n      \"payload\": {\n        \"AcmeCorp\" {\n          // <SOURCE> Type\n          \"type\": \"organisation\",\n          \"packages\": {\n            // <PACKAGE> Type\n            \"Official\": {\n              \"EBOB FP\": {\n                // <PRODUCT> Type\n                \"uom\" : \"$/ton\",\n                // <VALUE> Type\n                \"H23\": 123.45,\n                \"N23\": 678.90,\n                \"V23\": {\"error\": {\"cause\": \"missing-dependency\"}},\n                ...\n              },\n              ...\n            }\n          }\n        },\n        \"ICE\": {\n          \"type\": \"exchange\",\n          \"packages\": {\n            ...\n          }\n        }\n      }\n    }\n\n**RESPONSE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">generated_at</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">the ISO-8601 formatted date time indicating when this object was calculated</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">payload</td>\n<td class=\"org-left\">Object</td>\n<td class=\"org-left\">an object representing the <a id=\"org15e5163\"></a> <code>sources</code> of the data. The keys inside are homogenous, representing the <a href=\"#org0d3e875\">sources</a> of data.</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org0d3e875\"></a>\n**SOURCE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">type</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">See <a href=\"#orgfc17285\">SourceType</a> section below</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">packages</td>\n<td class=\"org-left\">Object</td>\n<td class=\"org-left\">An object representing the <a href=\"#orgcc26bd5\">packages</a> under the source. The keys inside are homogenous, representing the names of the packages.</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orgcc26bd5\"></a>\n**PACKAGE TYPE**\n\nThe package object has homogenous keys representing the products that belong to the package. We supply the product long name which is unique to the package.\n\n<a id=\"orgafb2894\"></a>\n**PRODUCT TYPE**\n\nThe product package has homogenous keys with values specified as [Value Types](#orgf8f41ac), defined below, apart from [`uom`](#org9c0053b) which is defined below. Its keys are the tenor codes that we have results for. Tenor code definitions can be seen later in the document.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">uom</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">See <a href=\"#org9c0053b\">UOM</a> section below</td>\n</tr>\n\n</tbody>\n</table>\n\n<a id=\"orgf8f41ac\"></a>\n**VALUE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">value</td>\n<td class=\"org-left\">Double/Map</td>\n<td class=\"org-left\">The value or Map containing 'error' key with details about the error</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">tenor</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">The relative period for the instrument. We currently only support monthly products and the format will be \"MDD\" where DD is the numerical month value</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orgfc17285\"></a>\n**SOURCETYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">organisation</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">exchange</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">broker</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org9c0053b\"></a>\n**UOM**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">days</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mwh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">flatr</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kb</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kbd</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kcbm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kg_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kgal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">lots</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">none</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">p_thm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">percent</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">rmb_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bsh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_day</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_mmbtu</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_thousands</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usdmm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws_and_usd_ton</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orgd26f588\"></a>\n**TENOR CODES**\n\nCurrently, Artis Streaming API supports only monthly products and therefore all tenor codes will be for months. Under a product we supply the date code for the results where, comprised of a single character and two digits representing the year, e.g. H23 = March 2023.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Month Code</th>\n<th scope=\"col\" class=\"org-left\">Month</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">F</td>\n<td class=\"org-left\">January</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">G</td>\n<td class=\"org-left\">February</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">H</td>\n<td class=\"org-left\">March</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">J</td>\n<td class=\"org-left\">April</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">K</td>\n<td class=\"org-left\">May</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">M</td>\n<td class=\"org-left\">June</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">N</td>\n<td class=\"org-left\">July</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Q</td>\n<td class=\"org-left\">August</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">U</td>\n<td class=\"org-left\">September</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">V</td>\n<td class=\"org-left\">October</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">X</td>\n<td class=\"org-left\">November</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Z</td>\n<td class=\"org-left\">December</td>\n</tr>\n</tbody>\n</table>\n\n","security":[{"apiAuth":[]}],"deprecated":true}},"/prices/v2/liveprices":{"get":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"# A stream of server-sent events\n\nThe connection will remain open, and new events will be sent as they occur.\n⚠️ **Warning:** The 'Try it out' feature in Swagger UI is not compatible with streaming responses and will appear to hang indefinitely. Use a tool like `curl` or a dedicated client to test this endpoint.\n\n    curl --location --request GET 'https://folio-api.artis.works/prices/v2/liveprices?update_rate=1000&page=A_PAGE' \\\n    -N -H 'Authorization: Bearer <JWT>' -H 'Accept: text/event-stream'\n    \n## Event Format\nThe stream follows the standard SSE format. Each message includes a JSON `data` payload and an optional `event` type:\n### keep-alive messages, fired every 15 seconds\n\n    event: ka\n    data: {\\\"time\\\": \\\"2025-09-02T07:38:22.034431Z\\\"}\n\n### data messages\n\n    data: <described-below>\n","schema":{"title":"api/v2-response","example":{"generated_at":"2023-09-20T11:43:55.767900632Z","payload":{"cdc2ee85-7fa0-40a7-90bd-17b610aa4309":{"source":"ICE FUTURES EUROPE","package":"ICE","name":"BRT FT","type":"exchange","uom":"usd_bbl","data":{"N25":{"value":80.746}}},"ef6b7ce4-1810-4b8a-854e-5041ef7b3fa3":{"source":"Artis Works","package":"dev-api2","name":"curve-with-global","type":"organisation","uom":"usd_ton","data":{"N25":{"value":{"error":{"cause":"missing-dependency"}}}}}}}}}},"produces":["text/event-stream"],"consumes":["application/json","application/transit+msgpack","application/transit+json","application/edn"],"parameters":[{"in":"query","name":"page","description":"","type":"string","required":false,"x-allOf":[{"type":"string"},{}]},{"in":"query","name":"update_rate","description":"","type":"integer","required":false,"format":"int64"}],"summary":"Stream live prices values","description":"# Table of Contents\n\n1.  [Headers](#headers)\n2.  [Responses](#responses)\n3.  [Example](#example)\n4.  [Data Objects](#data_objects)\n\nThe endpoint sends data using [Server-Sent Events (SSE)](https://en.wikipedia.org/wiki/Server-sent_events) which allows for performant and secure streaming of data. Each message is a complete snapshot of all subscribed curves. Responses will be sent periodically once per second. A custom update rate can be set in milliseconds using the `update_rate` query parameter.\n\n\n<a id=\"headers\"></a>\n\n# Headers\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Header</th>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">Authorization</td>\n<td class=\"org-left\">Bearer &lt;JWT TOKEN&gt;</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"responses\"></a>\n\n# Responses\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">HTTP Status Code</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">200 - OK</td>\n<td class=\"org-left\">The SSE session has been established and data is being streamed</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">401 - Unauthorized</td>\n<td class=\"org-left\">The provided JWT token is invalid or has expired</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">429 - Too Many Requests</td>\n<td class=\"org-left\">The user has too many concurrent sessions</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">500 - Internal Server Error</td>\n<td class=\"org-left\">An error occurred while establishing the SSE session</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"example\"></a>\n\n# Example\n\n    curl --location --request GET 'https://folio-api.artis.works/prices/v2/liveprices?update_rate=1000&page=A_PAGE' \\\n    -N -H 'Authorization: Bearer <JWT>' -H 'Accept: text/event-stream'\n\n\n<a id=\"data_objects\"></a>\n\n# Data Objects\n\nMessages over the SSE connection will follow the [Events specification](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#event).\n\nEach message consists of one or more lines of text listing the fields for that message. Each field is represented by the field name, followed by a colon, followed by the text data for that field's value.\nEach message received has some combination of the following fields, one per line:\n\n* event: A string identifying the type of event described.\n* data: The data field for the message. This will be `json` encoded data.\n\n## Supported events\n\nCurrently there are 2 types of events that can be received from the Artis SSE stream\n\n* ka : keep-alive, this is sent every 15 seconds and serves as a heartbeat message to ensure the connection is kept open.\n  * Along with this event, there will also be data field giving more details about the event. Data sent along with the `ka` event will be a map like this\n  ```json\n  {\"time\" \"2024-02-29T18:28:39.641757Z\"}\n  ```\n* disconnect: this event will be sent in case of errors on the server side indicating that the stream needs to be closed. This will be the last message received on the SSE stream before the connection is closed. \n  * Along with this event, there will be data field giving more details about the error. For example, in case the authentication token expires during an ongoing SSE connection\n  ```json\n  {\"error\" {\"code\" 4400},\n   \"cause\" {\"server_error_msg\":\"4400: Connection initialization failed: Could not verify JWT: JWTExpired\"}}\n  ```\n\n## Data messages\n\nIn addition to the event messages, clients will also receive `data-only` messages as `json` with the following payload:\n\n    {\n      // <RESPONSE> Type\n      \"generated_at\": \"2023-09-20T11:43:55.767900632Z\",\n      \"payload\": {\n        // <PRODUCT> Type\n        \"cdc2ee85-7fa0-40a7-90bd-17b610aa4309\": {\n          \"source\": \"ICE FUTURES EUROPE\",\n          \"package\": \"ICE\",\n          \"name\": \"BRT FT\",\n          // <SOURCE> Type\n          \"type\": \"exchange\",\n          \"uom\": \"usd_bbl\",\n          \"data\": {\n            \"N25\": {\n              // <VALUE> Type\n              \"value\": 80.746\n            },\n            ...\n          }\n        },\n        \"ef6b7ce4-1810-4b8a-854e-5041ef7b3fa3\": {\n          \"source\": \"Artis Works\",\n          \"package\": \"dev-api2\",\n          \"name\": \"curve-with-global\",\n          \"type\": \"organisation\",\n          \"uom\": \"usd_ton\",\n          \"data\": {\n            \"N25\": {\n              \"value\": {\"error\" {\"cause\": \"missing-dependency\"}}\n            },\n            ...\n          }\n        },\n        ...\n      }\n    }\n\n**RESPONSE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">generated_at</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">the ISO-8601 formatted date time indicating when this object was calculated</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">payload</td>\n<td class=\"org-left\">Object</td>\n<td class=\"org-left\">an object representing the <a id=\"orge952864\"></a> <code>sources</code> of the data. The keys inside are homogenous, representing the <a href=\"#orge952864\">sources</a> of data.</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org7a71f90\"></a>\n**PRODUCT TYPE**\n\nThe product package has homogenous keys with values specified as [Value Types](#orgfa7c039), defined below, apart from [`uom`](#org3ca7a89) which is defined below. Its keys are the tenor codes that we have results for. Tenor code definitions can be seen later in the document.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">uom</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">See <a href=\"#org3ca7a89\">UOM</a> section below</td>\n</tr>\n\n</tbody>\n</table>\n\n<a id=\"orgfa7c039\"></a>\n**VALUE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">value</td>\n<td class=\"org-left\">Double/Map</td>\n<td class=\"org-left\">The value or Map containing 'error' key with details about the error</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">tenor</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">The relative period for the instrument. We currently only support monthly products and the format will be \"MDD\" where DD is the numerical month value</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orgbfffb59\"></a>\n**SOURCETYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">organisation</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">exchange</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">broker</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org3ca7a89\"></a>\n**UOM**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">days</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mwh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">flatr</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kb</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kbd</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kcbm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kg_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kgal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">lots</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">none</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">p_thm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">percent</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">rmb_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bsh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_day</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_mmbtu</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_thousands</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usdmm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws_and_usd_ton</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org0f5f375\"></a>\n**TENOR CODES**\n\nCurrently, Artis Streaming API supports only monthly products and therefore all tenor codes will be for months. Under a product we supply the date code for the results where, comprised of a single character and two digits representing the year, e.g. H23 = March 2023.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Month Code</th>\n<th scope=\"col\" class=\"org-left\">Month</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">F</td>\n<td class=\"org-left\">January</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">G</td>\n<td class=\"org-left\">February</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">H</td>\n<td class=\"org-left\">March</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">J</td>\n<td class=\"org-left\">April</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">K</td>\n<td class=\"org-left\">May</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">M</td>\n<td class=\"org-left\">June</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">N</td>\n<td class=\"org-left\">July</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Q</td>\n<td class=\"org-left\">August</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">U</td>\n<td class=\"org-left\">September</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">V</td>\n<td class=\"org-left\">October</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">X</td>\n<td class=\"org-left\">November</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Z</td>\n<td class=\"org-left\">December</td>\n</tr>\n</tbody>\n</table>\n\n","security":[{"apiAuth":[]}]},"post":{"responses":{"429":{"description":"Too many requests","schema":{"title":"api/rate-limit-response","example":"{\"error\": \"Too Many Requests\"}"}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"500":{"description":"Internal Server Error","schema":{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"],"x_any_of":[{"type":"object","properties":{"error_type":{"type":"string"},"error_code":{"type":"string"},"error_message":{"type":"string"}},"required":["error_type","error_code","error_message"]},{"type":"string"}]}},"200":{"description":"Liveprices Snapshot v2 payload","schema":{"title":"api/v2-response","example":{"generated_at":"2023-09-20T11:43:55.767900632Z","payload":{"cdc2ee85-7fa0-40a7-90bd-17b610aa4309":{"source":"ICE FUTURES EUROPE","package":"ICE","name":"BRT FT","type":"exchange","uom":"usd_bbl","data":{"N25":{"value":80.746}}},"ef6b7ce4-1810-4b8a-854e-5041ef7b3fa3":{"source":"Artis Works","package":"dev-api2","name":"curve-with-global","type":"organisation","uom":"usd_ton","data":{"N25":{"value":{"error":{"cause":"missing-dependency"}}}}}}}}}},"produces":["application/json"],"consumes":["application/json"],"parameters":[{"in":"body","name":"api/snapshot_params","description":"","required":true,"schema":{"type":"array","items":{"type":"string","format":"uuid"},"x_all_of":[{"type":"array","items":{"type":"string","format":"uuid"}},{}],"title":"api/snapshot-params"}}],"summary":"Get snapshot of specified products live prices","description":"# Table of Contents\n\n1.  [Headers](#orgb9fa28d)\n2.  [Responses](#org5ebe975)\n3.  [POST body](#org265b2b8)\n4.  [Example](#org69fe97e)\n5.  [Data Objects](#orga6936df)\n\nThe endpoint returns a snapshot of the specified products values.\n\n\n<a id=\"headers\"></a>\n\n# Headers\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Header</th>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">Authorization</td>\n<td class=\"org-left\">Bearer &lt;JWT TOKEN&gt;</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"responses\"></a>\n\n# Responses\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">HTTP Status Code</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">200 - OK</td>\n<td class=\"org-left\">The SSE session has been established and data is being streamed</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">401 - Unauthorized</td>\n<td class=\"org-left\">The provided JWT token is invalid or has expired</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">429 - Too Many Requests</td>\n<td class=\"org-left\">The user has too many concurrent sessions</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">500 - Internal Server Error</td>\n<td class=\"org-left\">An error occurred while establishing the SSE session</td>\n</tr>\n</tbody>\n</table>\n\n\n<a id=\"post_body\"></a>\n\n# POST body\n\nThe endpoint expects a JSON encoded body in the POST request. The body is expected to be an array of Product-ids for which snapshot\ndata is required.\n\n\n<a id=\"example\"></a>\n\n# Example\n\n    curl --location --request POST 'https://folio-api.artis.works/prices/v2/liveprices' \\\n    -H 'Authorization: Bearer <JWT>' \\\n    -H 'Content-Type: application/json' \\\n    -d '[\"productId1\", \"productId2\"]'\n\n\n<a id=\"data_objects\"></a>\n\n# Data Objects\n\nIf a successful request is made then data will be returned as `json`. An example payload:\n\n    \n    {\n      // <RESPONSE> Type\n      \"generated_at\": \"2023-09-20T11:51:47.326546543Z\",\n      \"payload\": {\n        // <PRODUCT> Type\n        \"cdc2ee85-7fa0-40a7-90bd-17b610aa4309\": {\n          \"source\": \"ICE FUTURES EUROPE\",\n          \"package\": \"ICE\",\n          \"name\": \"BRT FT\",\n          // <SOURCE> Type\n          \"type\": \"exchange\",\n          \"uom\": \"usd_bbl\",\n          \"data\": {\n            \"N25\": {\n              // <VALUE> Type\n              \"value\": 80.737\n            },\n            ...\n          }\n        },\n        \"ef6b7ce4-1810-4b8a-854e-5041ef7b3fa3\": {\n          \"source\": \"Artis Works\",\n          \"package\": \"dev-api2\",\n          \"name\": \"curve-with-global\",\n          \"type\": \"organisation\",\n          \"uom\": \"usd_ton\",\n          \"data\": {\n            \"N25\": {\n              \"value\": {\"error\" {\"cause\": \"missing-dependency\"}}\n            },\n            ...\n          }\n        },\n      }\n    }\n\n**RESPONSE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">generated_at</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">the ISO-8601 formatted date time indicating when this object was calculated</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">payload</td>\n<td class=\"org-left\">Object</td>\n<td class=\"org-left\">an object representing the <a id=\"org50118cd\"></a> <code>sources</code> of the data. The keys inside are homogenous, representing the <a href=\"#org50118cd\">sources</a> of data.</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"org035731c\"></a>\n**PRODUCT TYPE**\n\nThe product package has homogenous keys with values specified as [Value Types](#org62c5b6f), defined below, apart from [`uom`](#orge4ac2bc) which is defined below. Its keys are the tenor codes that we have results for. Tenor code definitions can be seen later in the document.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">uom</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">See <a href=\"#orge4ac2bc\">UOM</a> section below</td>\n</tr>\n\n</tbody>\n</table>\n\n<a id=\"org62c5b6f\"></a>\n**VALUE TYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Key</th>\n<th scope=\"col\" class=\"org-left\">Type</th>\n<th scope=\"col\" class=\"org-left\">Description</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">value</td>\n<td class=\"org-left\">Double/Map</td>\n<td class=\"org-left\">The value or Map containing 'error' key with details about the error</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">tenor</td>\n<td class=\"org-left\">String</td>\n<td class=\"org-left\">The relative period for the instrument. We currently only support monthly products and the format will be \"MDD\" where DD is the numerical month value</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orgaade5ce\"></a>\n**SOURCETYPE**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">organisation</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">exchange</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">broker</td>\n</tr>\n</tbody>\n</table>\n\n<a id=\"orge4ac2bc\"></a>\n**UOM**\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Value</th>\n</tr>\n</thead>\n\n<tbody>\n\n<tr>\n<td class=\"org-left\">days</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">eur_mwh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">flatr</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kb</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kbd</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kcbm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kg_m3</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kgal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">kt</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">lots</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">none</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">p_thm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">percent</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">rmb_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_bsh</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usc_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_bbl</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_day</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_gal</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_mmbtu</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_thousands</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usd_ton</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">usdmm</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">ws_and_usd_ton</td>\n</tr>\n\n</tbody>\n</table>\n\n<a id=\"org105bb46\"></a>\n**TENOR CODES**\n\nCurrently, Artis Streaming API supports only monthly products and therefore all tenor codes will be for months. Under a product we supply the date code for the results where, comprised of a single character and two digits representing the year, e.g. H23 = March 2023.\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col  class=\"org-left\" />\n\n<col  class=\"org-left\" />\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">Month Code</th>\n<th scope=\"col\" class=\"org-left\">Month</th>\n</tr>\n</thead>\n\n<tbody>\n<tr>\n<td class=\"org-left\">F</td>\n<td class=\"org-left\">January</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">G</td>\n<td class=\"org-left\">February</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">H</td>\n<td class=\"org-left\">March</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">J</td>\n<td class=\"org-left\">April</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">K</td>\n<td class=\"org-left\">May</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">M</td>\n<td class=\"org-left\">June</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">N</td>\n<td class=\"org-left\">July</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Q</td>\n<td class=\"org-left\">August</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">U</td>\n<td class=\"org-left\">September</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">V</td>\n<td class=\"org-left\">October</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">X</td>\n<td class=\"org-left\">November</td>\n</tr>\n\n\n<tr>\n<td class=\"org-left\">Z</td>\n<td class=\"org-left\">December</td>\n</tr>\n</tbody>\n</table>\n\n","security":[{"apiAuth":[]}]}}},"definitions":null}